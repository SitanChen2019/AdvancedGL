#version 400

layout( isolines ) in;

uniform mat4 view;
uniform mat4 projection;


vec3 four_points_bezier( vec3 p0,vec3 p1,vec3 p2,vec3 p3, float u)
{
    float u_ = 1-u;

    float b0 = u_*u_*u_;
    float b1 = 3*u_*u_*u;
    float b2 = 3*u_*u*u;
    float b3 = u*u*u;

    vec3 p = p0*b0 + p1*b1 + p2*b2 + p3*b3;
    return p;
}

void main()
{
    float u = gl_TessCoord.x;

    vec3 v0 = gl_in[0].gl_Position.xyz;
    vec3 v1 = gl_in[1].gl_Position.xyz;
    vec3 v2 = gl_in[2].gl_Position.xyz;
    vec3 v3 = gl_in[3].gl_Position.xyz;
    vec3 p0 = four_points_bezier(v0,v1,v2,v3,u);

    v0 = gl_in[4].gl_Position.xyz;
    v1 = gl_in[5].gl_Position.xyz;
    v2 = gl_in[6].gl_Position.xyz;
    v3 = gl_in[7].gl_Position.xyz;
    vec3 p1 = four_points_bezier(v0,v1,v2,v3,u);

    v0 = gl_in[8].gl_Position.xyz;
    v1 = gl_in[9].gl_Position.xyz;
    v2 = gl_in[10].gl_Position.xyz;
    v3 = gl_in[11].gl_Position.xyz;
    vec3 p2 = four_points_bezier(v0,v1,v2,v3,u);

    v0 = gl_in[12].gl_Position.xyz;
    v1 = gl_in[13].gl_Position.xyz;
    v2 = gl_in[14].gl_Position.xyz;
    v3 = gl_in[15].gl_Position.xyz;
    vec3 p3 = four_points_bezier(v0,v1,v2,v3,u);


    float v = gl_TessCoord.y;
    vec3 p = four_points_bezier(p0,p1,p2,p3,v);
    gl_Position =  projection*view*vec4(p,1);
}